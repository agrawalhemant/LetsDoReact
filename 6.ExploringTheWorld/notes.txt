- let's get rid of the hard-coded restaurant list and instead call an API using fetch to get the list of resaturants and show them dynamically on UI.
- we can't use normal variables instead of state variables because ract doesn't know if the value of the varibale is changed to re-render the DOM. That's why we use state variable which when updated using setVariable funciton, the event is triggered in recat for diff algorith and it re-renders the UI for that particular component.
- remember, react re-renders the whole component in which change is detected by diff algo not just that element. re-render means calling the componenet again, taht's why we see updated value of state variable.
__________________________________________________________________________________________________________________________________________

- when we use an input JSX element, we can bind it with state variable to catch its value and use that value for any purpose (most;y filter restaurants), but we will not be simple able to type anything in the inout box because its value is equals to state variable. since, state variable can't be updated normally, so we have to keep an onChange attribute with input element to update the value of state variablw using setStateVariable function of useState();
- i've used another state variable originalListOfRestaurants because while filtering the actual listOfRestaurants was being updated. So after first filter if someone wants to search for another restaurant, it wouldn't be possible, as listOfRestaurants was updated with filtered value. So this can be resolved using originalListOfRestaurants. Also, i changed the loader condition, now the loader should come only when originalListOfRestaurants is empty not listOfRestaurants, because it might be possible that listOfRestaurants get empty after filteration, but originalListOfRestaurants will remain same.
- i tried to use filterRestaurants() in onChange attribute of search but the problem was that setSearchText() method was not able to update the searchText by the time filterRestaurants() was called [since time, tide and JS waits for nothing]. and that's why filterRestaurants() was being called with older value of searchText. to resolve this issue, i used keyUp event instead of onChange . so by the time any user takes his/her finger of the key after pressing it, the searchText is updated. 